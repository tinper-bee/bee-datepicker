import {Col, Row} from 'bee-layout';
import {Panel} from 'bee-panel';
import Button from 'bee-button';
import React, {Component} from 'react';
import ReactDOM from 'react-dom';


const CARET = <i className="uf uf-arrow-down"></i>;

const CARETUP = <i className="uf uf-arrow-up"></i>;


var Demo1 = require("./demolist/Demo1");var Demo2 = require("./demolist/Demo2");var Demo3 = require("./demolist/Demo3");var Demo4 = require("./demolist/Demo4");var Demo5 = require("./demolist/Demo5");var Demo6 = require("./demolist/Demo6");var Demo7 = require("./demolist/Demo7");var Demo8 = require("./demolist/Demo8");var Demo9 = require("./demolist/Demo9");var Demo10 = require("./demolist/Demo10");var Demo11 = require("./demolist/Demo11");var Demo12 = require("./demolist/Demo12");var DemoArray = [{"example":<Demo1 />,"title":" 选择日期","code":"/**\r\n *\r\n * @title 选择日期\r\n * @description 以「日期」为基本单位，基础的日期选择控件\r\n */\r\n\r\nimport React, {Component} from \"react\";\r\n\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport { Icon, Row, Col } from 'tinper-bee';\r\n\r\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\r\nimport enUS from \"rc-calendar/lib/locale/en_US\";\r\nimport moment from \"moment\";\r\n\nimport 'moment/locale/zh-cn';\r\n\r\nmoment.locale('zh-cn');\r\n\r\nconst format = \"YYYY-MM-DD dddd\";\r\n\r\nconst dateInputPlaceholder = \"选择日期\";\r\n\r\nfunction onSelect(d) {\r\n    // console.log(d);\r\n}\r\n\r\n\r\nclass Demo1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            open: false\r\n        };\r\n    }\r\n\r\n    onChange = (d, dataString) => {\r\n        console.log(dataString);\r\n    };\r\n    clear = d => {\r\n        this.setState({\r\n            value: ''\r\n        })\r\n    }\r\n    renderIcon = d => {\r\n        return (<Icon type=\"uf-search\"></Icon>)\r\n    }\r\n    onOpenChange = d => {\r\n        console.log(d);\r\n    }\r\n    open = d => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n    onClick = (e,d,str) => {\r\n        console.log(d);\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n    renderFooter = () => {\r\n        return null\r\n    }\r\n\r\n    render() {\r\n        var self = this;\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <DatePicker\r\n                            format={format}\r\n                            onSelect={onSelect}\r\n                            onChange={this.onChange}\r\n                            locale={zhCN}\r\n                            value={this.state.value}\r\n                            onOpenChange={this.onOpenChange.bind(this)}\r\n                            placeholder={dateInputPlaceholder}\r\n                            className={\"uuuu\"}\r\n                            onClick={this.onClick}\r\n                        />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <button className=\"u-button\" onClick={this.clear}>清空</button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","desc":" 以「日期」为基本单位，基础的日期选择控件"},{"example":<Demo2 />,"title":" 选择年月","code":"/**\r\n *\r\n * @title 选择年月\r\n * @description 以「年月」为基本单位，基础的年月选择控件\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\n\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport {  Row, Col  } from 'tinper-bee';\r\nimport moment from \"moment\";\r\n\r\n\r\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\r\nimport enUS from \"rc-calendar/lib/locale/en_US\";\r\n\r\nconst { MonthPicker } = DatePicker;\r\n\r\nconst format2 = \"YYYY\";\r\n\r\nfunction onSelect(d) {\r\n  console.log(d);\r\n}\r\n\r\nfunction onChange(d) {\r\n  console.log(d);\r\n}\r\n\r\nclass Demo2 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col md={12}>\r\n            <MonthPicker\r\n              format={format2}\r\n              onSelect={onSelect}\r\n              onChange={onChange}\r\n              locale={zhCN}\r\n\r\n\r\n              defaultValue={moment()}\r\n              placeholder={\"选择年月\"}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","desc":" 以「年月」为基本单位，基础的年月选择控件"},{"example":<Demo3 />,"title":" 日期范围","code":"/**\r\n *\r\n * @title 日期范围\r\n * @description 以「日期范围」为基本单位，基础的日期范围选择控件\r\n */\r\n\r\nimport React, {Component} from \"react\";\r\n\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport { Form, Icon, Row, Col } from 'tinper-bee';\r\n\n\r\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\r\nimport moment from \"moment/moment\";\r\n\nconst FormItem = Form.FormItem;\r\n\r\n\r\nconst now = moment();\r\n\r\nconst {RangePicker} = DatePicker;\r\n\r\nconst format3 = \"YYYY-MM-DD HH:mm:ss\";\r\n\r\nfunction formatValue(value, format) {\r\n    return (value && value.format(format)) || '';\r\n}\r\n\r\nfunction onSelect(d) {\r\n    //console.log(d);\r\n}\r\n\r\n\r\n\r\nclass Demo3 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            v:''\r\n        };\r\n    }\r\n\r\n    onStartChange = (value) => {\r\n        this.setState({\r\n            startValue: value[0],\r\n            startOpen: false,\r\n            endOpen: true,\r\n        });\r\n    }\r\n\r\n    remove() {\r\n        this.setState({value: ''})\r\n    }\r\n\r\n    onChange (d,str) {\r\n        console.log(d);\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const self = this;\r\n        const { getFieldProps, getFieldError } = this.props.form;\r\n\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <RangePicker\r\n                            placeholder={'开始 ~ 结束'}\r\n                            dateInputPlaceholder={['开始', '结束']}\r\n                            showClear={true}\r\n                            value={this.state.value}\r\n                            onChange={this.onChange.bind(this)}\r\n                            renderFooter={()=>{\r\n                            return (\r\n                                <div></div>\r\n                            )\r\n                        }}\r\n                        />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <button className=\"u-button\" onClick={this.remove.bind(this)}>清空</button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","desc":" 以「日期范围」为基本单位，基础的日期范围选择控件"},{"example":<Demo4 />,"title":" 动态的改变时间","code":"/**\r\n *\r\n * @title 动态的改变时间\r\n * @description 以「日期时间」为基本单位，基础的日期时间选择控件\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport { Button,  Row, Col  } from 'tinper-bee';\r\nimport moment from \"moment\";\r\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\r\n\n\nconst format = \"YYYY-MM-DD HH:mm:ss\";\r\nconst dateInputPlaceholder = \"选择日期\";\r\n\r\nclass Demo4 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: moment()\r\n    };\r\n  }\r\n\r\n  handleChange = value => {\r\n    this.setState({\r\n      value: value\r\n    });\r\n  };\r\n  onSelect = d => {\r\n    console.log(d);\r\n  };\r\n\r\n  handlerChangeDate = () => {\r\n    this.setState({\r\n      value: moment(\"2011-11-11 11:11:11\")\r\n    });\r\n    console.log(\"click\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col md={8}>\r\n            <DatePicker\r\n              format={format}\r\n              locale={zhCN}\r\n              onSelect={this.onSelect}\r\n              onChange={this.handleChange}\r\n              value={this.state.value}\r\n              placeholder={dateInputPlaceholder}\r\n            />\r\n          </Col>\r\n          <Col md={3}>\r\n            <Button onClick={this.handlerChangeDate}>变</Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","desc":" 以「日期时间」为基本单位，基础的日期时间选择控件"},{"example":<Demo5 />,"title":" 选择周","code":"/**\r\n *\r\n * @title 选择周\r\n * @description 以「周」为基本单位，基础的周选择控件\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\n\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport {  Row, Col  } from 'tinper-bee';\r\nconst { WeekPicker } = DatePicker;\r\nimport moment from \"moment\";\r\n\r\nfunction onSelect(d) {\r\n  console.log(d);\r\n}\r\n\r\nfunction onChange(d) {\r\n  console.log(d);\r\n}\r\n\r\nclass Demo5 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col md={12}>\r\n            <WeekPicker defaultValue={''} onChange={onChange} placeholder=\"选择周\" />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","desc":" 以「周」为基本单位，基础的周选择控件"},{"example":<Demo6 />,"title":" 选择日期时间","code":"/**\r\n *\r\n * @title 选择日期时间\r\n * @description 以「日期时间」为基本单位，可以选择日期和时间\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\n\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport {  Row, Col  } from 'tinper-bee';\r\n\r\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\r\nimport enUS from \"rc-calendar/lib/locale/en_US\";\r\nimport moment from \"moment\";\r\n\r\nconst format = \"YYYY-MM-DD HH:mm:ss\";\r\n\r\nconst dateInputPlaceholder = \"选择日期\";\r\n\r\nfunction onSelect(d) {\r\n  console.log(d);\r\n}\r\n\r\nfunction onChange(d) {\r\n  console.log(d);\r\n}\r\n\r\nclass Demo6 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col md={12}>\r\n            <DatePicker\r\n              format={format}\r\n              showTime={true}\r\n              onSelect={onSelect}\r\n              onChange={onChange}\r\n              locale={zhCN}\r\n              defaultValue={moment()}\r\n              placeholder={dateInputPlaceholder}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","desc":" 以「日期时间」为基本单位，可以选择日期和时间"},{"example":<Demo7 />,"title":" 禁用日期","code":"/**\r\n *\r\n * @title 禁用日期\r\n * @description 禁用日期\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\n\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport {  Row, Col  } from 'tinper-bee';\r\n\r\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\r\nimport enUS from \"rc-calendar/lib/locale/en_US\";\r\nimport moment from \"moment\";\r\n\r\nconst format = \"YYYY-MM-DD\";\r\n\r\nconst dateInputPlaceholder = \"选择日期\";\r\n\r\nfunction onSelect(d) {\r\n  console.log(d);\r\n}\r\n\r\nfunction onChange(d) {\r\n  console.log(d);\r\n}\r\n\r\nclass Demo7 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col md={12}>\r\n            <DatePicker\r\n              format={format}\r\n              onSelect={onSelect}\r\n              onChange={onChange}\r\n              locale={zhCN}\r\n              defaultValue={moment()}\r\n              placeholder={dateInputPlaceholder}\r\n              disabled={true}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","desc":" 禁用日期"},{"example":<Demo8 />,"title":" 不可选择日期和时间","code":"/**\r\n *\r\n * @title 不可选择日期和时间\r\n * @description 可用 disabledDate 和 disabledTime 分别禁止选择部分日期和时间，其中 disabledTime 需要和 showTime 一起使用。\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\n\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport {  Row, Col  } from 'tinper-bee';\r\n\r\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\r\nimport moment from \"moment\";\r\n\r\nconst format = \"YYYY-MM-DD\";\r\n\r\nconst dateInputPlaceholder = \"选择日期\";\r\n\r\nfunction onSelect(d) {\r\n  console.log(d);\r\n}\r\n\r\nfunction onChange(d) {\r\n  console.log(d);\r\n}\r\n\r\nfunction disabledDate(current) {\r\n  return current && current.valueOf() < Date.now();\r\n}\r\n\r\nclass Demo7 extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col md={12}>\r\n            <DatePicker\r\n              format={format}\r\n              onSelect={onSelect}\r\n              onChange={onChange}\r\n              locale={zhCN}\r\n              disabledDate={disabledDate}\r\n              defaultValue={moment()}\r\n              placeholder={dateInputPlaceholder}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","desc":" 可用 disabledDate 和 disabledTime 分别禁止选择部分日期和时间，其中 disabledTime 需要和 showTime 一起使用。"},{"example":<Demo9 />,"title":" 自定义日期渲染父级容器","code":"/**\r\n *\r\n * @title 自定义日期渲染父级容器\r\n * @description 以「日期」为基本单位，基础的日期选择控件\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\n\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport { Icon,  Row, Col  } from 'tinper-bee';\r\n\r\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\r\nimport enUS from \"rc-calendar/lib/locale/en_US\";\r\nimport moment from \"moment\";\r\n\n\r\nconst format = \"YYYY-MM-DD\";\r\n\r\nconst dateInputPlaceholder = \"选择日期\";\r\n\r\nfunction onSelect(d) {\r\n    // console.log(d);\r\n}\r\n\r\nfunction onChange(d) {\r\n    this.setState({\r\n        value: ''\r\n    });\r\n}\r\n\r\nclass Demo1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: ''\r\n        };\r\n    }\r\n    getCalendarContainer() {\r\n        return this.d || document.getElementById('d');\r\n    }\r\n    onChange = d => {\r\n        console.log(d)\r\n\r\n        this.setState({\r\n            value: ''\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <div id=\"d\" ref=\"d\">\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <DatePicker\r\n                            format={format}\r\n                            onSelect={onSelect}\r\n                            onChange={this.onChange}\r\n                            locale={zhCN}\r\n                            defaultValue={this.state.value}\r\n                            placeholder={dateInputPlaceholder}\r\n                            getCalendarContainer={this.getCalendarContainer}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","desc":" 以「日期」为基本单位，基础的日期选择控件"},{"example":<Demo10 />,"title":" 选择年","code":"/**\r\n *\r\n * @title 选择年\r\n * @description 以「年」为基本单位，基础的年选择控件\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\n\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport { Icon,  Row, Col  } from 'tinper-bee';\r\nimport moment from \"moment\";\r\n\n\r\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\r\nimport enUS from \"rc-calendar/lib/locale/en_US\";\r\n\r\nconst { YearPicker } = DatePicker;\r\n\r\nconst format2 = \"YYYY\";\r\n\r\nfunction onSelect(d) {\r\n    console.log(d);\r\n}\r\n\r\nfunction onChange(d) {\r\n    console.log(d);\r\n}\r\n\r\nclass Demo10 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: moment(),\r\n            open: false\r\n        };\r\n    }\r\n    getCalendarContainer() {\r\n        return this.d || document.getElementById('d');\r\n    }\r\n    clear = d => {\r\n        this.setState({\r\n            value: ''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <div id={\"d\"}>\r\n                            <YearPicker\r\n                                format={format2}\r\n\r\n                                onChange={onChange}\r\n\r\n                                locale={zhCN}\r\n\r\n                                value={this.state.value}\r\n\r\n                                className = {'rc-calendar-year'}\r\n\r\n                                placeholder={\"选择年\"}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <button className=\"u-button\" onClick={this.clear}>清空</button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","desc":" 以「年」为基本单位，基础的年选择控件"},{"example":<Demo11 />,"title":" 自定义展示日期面板，外层输入框可输入","code":"/**\r\n *\r\n * @title 自定义展示日期面板，外层输入框可输入\r\n * @description open设置面板展开收起，keyboardInput外层input是否可输入，showDateInput是否显示内层input\r\n */\r\n\r\nimport React, {Component} from \"react\";\r\n\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport { Icon, Row, Col } from 'tinper-bee';\r\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\r\nimport enUS from \"rc-calendar/lib/locale/en_US\";\r\nimport moment from \"moment\";\r\n\nimport 'moment/locale/zh-cn';\r\n\r\nmoment.locale('zh-cn');\r\n\r\nconst format = \"YYYY-MM-DD\";\r\n\r\nconst dateInputPlaceholder = \"选择日期\";\r\n\r\nfunction onSelect(d) {\r\n    // console.log(d);\r\n}\r\n\r\n\r\nclass Demo11 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            open: false\r\n        };\r\n    }\r\n\r\n    onChange = (d, dataString) => {\r\n        this.setState({\r\n            value:d\r\n        })\r\n        console.log('onChange',dataString)\r\n    };\r\n    renderIcon = d => {\r\n        return (<Icon type=\"uf-search\"></Icon>)\r\n    }\r\n    onOpenChange = open => {\r\n        console.log(open)\r\n    }\r\n    open = d => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        })\r\n    }\r\n    onClick = (e,d,str) => {\r\n        console.log(d);\r\n        \r\n    }\r\n    outInputKeydown = ()=>{\r\n        console.log('keydown')\r\n    }\r\n    render() {\r\n        var self = this; \r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <DatePicker\r\n                            format={format}\r\n                            onSelect={onSelect}\r\n                            onChange={this.onChange}\r\n                            locale={zhCN}\r\n                            open={this.state.open}\r\n                            defaultValue={moment('2018-01-01')}\r\n                            value={this.state.value}\r\n                            onOpenChange={this.onOpenChange.bind(this)}\r\n                            placeholder={dateInputPlaceholder}\r\n                            className={\"demo11\"}\r\n                            onClick={this.onClick}\r\n                            keyboardInput={true}\r\n                            showDateInput={false}\r\n                            // iconClick={this.open}\r\n                            // outInputKeydown={this.outInputKeydown}\r\n                        />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <button className=\"u-button\" onClick={this.open}>展开面板</button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","desc":" open设置面板展开收起，keyboardInput外层input是否可输入，showDateInput是否显示内层input"},{"example":<Demo12 />,"title":" 自定义展示日期面板，外层输入框可输入，配合form使用","code":"/**\r\n *\r\n * @title 自定义展示日期面板，外层输入框可输入，配合form使用\r\n * @description open设置面板展开收起，keyboardInput外层input是否可输入，showDateInput是否显示内层input\r\n */\r\n\r\nimport React, {Component} from \"react\";\r\n\nimport DatePicker from \"tinper-bee/lib/Datepicker\";\nimport { Form, Icon, Row, Col } from 'tinper-bee';\r\nimport zhCN from \"rc-calendar/lib/locale/zh_CN\";\r\nimport enUS from \"rc-calendar/lib/locale/en_US\";\r\nimport moment from \"moment\";\r\n\nimport 'moment/locale/zh-cn';\r\n\n\r\nmoment.locale('zh-cn');\r\n\r\nconst format = \"YYYY-MM-DD\";\r\n\r\nconst dateInputPlaceholder = \"选择日期\";\r\n\r\n\r\nclass Demo12 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            open: false\r\n        };\r\n    }\r\n    renderIcon = d => {\r\n        return (<Icon type=\"uf-search\"></Icon>)\r\n    }\r\n    onOpenChange = open => {\r\n        console.log(open)\r\n    }\r\n    open = d => {\r\n        this.setState({\r\n            open: !this.state.open\r\n        })\r\n    }\r\n    onClick = (e,d,str) => {\r\n        console.log(d);\r\n    }\r\n    onSelect(d) {\r\n        console.log(\"select:\"+d);\r\n    }\r\n    outInputKeydown = ()=>{\r\n        console.log('keydown')\r\n    }\r\n    submit = (e) => {\r\n        this.props.form.validateFields((err, values) => {\r\n            if (err) {\r\n                console.log('校验失败', values);\r\n            } else {\r\n                console.log('提交成功', values, moment(values.date).format('YYYY-MM-DD'));\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        var self = this; \r\n        const { getFieldProps, getFieldError } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <DatePicker\r\n                            format={format}\r\n                            onSelect={this.onSelect}\r\n                            onChange={this.onChange}\r\n                            locale={zhCN}\r\n                            open={this.state.open}\r\n                            onOpenChange={this.onOpenChange.bind(this)}\r\n                            placeholder={dateInputPlaceholder}\r\n                            className={\"demo11\"}\r\n                            onClick={this.onClick}\r\n                            keyboardInput={true}\r\n                            showDateInput={false}\r\n                            iconClick={this.open}\r\n                            outInputKeydown={this.outInputKeydown}\r\n                            {...getFieldProps('date', {\r\n                                validateTrigger: 'onBlur',\r\n                                initialValue:moment('2018-01-01'),\r\n                                rules: [{\r\n                                    required: true, message: '请输入日期',\r\n                                }],\r\n                            }) }\r\n                        />\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <button className=\"u-button\" onClick={this.open}>展开/收起面板</button>\r\n                        <button className=\"u-button\" onClick={this.submit}>获得值</button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","desc":" open设置面板展开收起，keyboardInput外层input是否可输入，showDateInput是否显示内层input"}]


class Demo extends Component {
    constructor(props) {
        super(props);
        this.state = {
            open: false
        }
        this.handleClick = this.handleClick.bind(this);
    }

    handleClick() {
        this.setState({open: !this.state.open})
    }

    render() {
        const {title, example, code, desc, scss_code} = this.props;
        let caret = this.state.open ? CARETUP : CARET;
        let text = this.state.open ? "隐藏代码" : "查看代码";

        const header = (
            <div>
            {example}
            <Button style={{"marginTop": "10px"}} shape="block" onClick={this.handleClick}>
        {caret}
        {text}
    </Button>
        </div>
    );
        return (
            <Col md={12}>
            <h3>{title}</h3>
            <p>{desc}</p>
            <Panel collapsible headerContent expanded={this.state.open} colors='bordered' header={header}
        footerStyle={{padding: 0}}>
    <pre><code className="hljs javascript">{code}</code></pre>
        {!!scss_code ? <pre><code className="hljs css">{scss_code}</code></pre> : null}
    </Panel>
        </Col>
    )
    }
}

class DemoGroup extends Component {
    constructor(props) {
        super(props)
    }

    render() {
        return (
            <Row>
            {DemoArray.map((child, index) => {

                return (
            <Demo example={child.example} title={child.title} code={child.code} scss_code={child.scss_code}
        desc={child.desc} key={index}/>
    )

    })}
    </Row>
    )
    }
}

ReactDOM.render(<DemoGroup/>, document.getElementById('tinperBeeDemo'));